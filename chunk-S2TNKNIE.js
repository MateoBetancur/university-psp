import{L as p}from"./chunk-V4WTADHK.js";var s=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),i={randomUUID:s};var d,f=new Uint8Array(16);function m(){if(!d){if(typeof crypto>"u"||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");d=crypto.getRandomValues.bind(crypto)}return d(f)}var o=[];for(let t=0;t<256;++t)o.push((t+256).toString(16).slice(1));function l(t,e=0){return(o[t[e+0]]+o[t[e+1]]+o[t[e+2]]+o[t[e+3]]+"-"+o[t[e+4]]+o[t[e+5]]+"-"+o[t[e+6]]+o[t[e+7]]+"-"+o[t[e+8]]+o[t[e+9]]+"-"+o[t[e+10]]+o[t[e+11]]+o[t[e+12]]+o[t[e+13]]+o[t[e+14]]+o[t[e+15]]).toLowerCase()}function y(t,e,r){if(i.randomUUID&&!e&&!t)return i.randomUUID();t=t||{};let n=t.random??t.rng?.()??m();if(n.length<16)throw new Error("Random bytes length must be >= 16");if(n[6]=n[6]&15|64,n[8]=n[8]&63|128,e){if(r=r||0,r<0||r+16>e.length)throw new RangeError(`UUID byte range ${r}:${r+15} is out of buffer bounds`);for(let a=0;a<16;++a)e[r+a]=n[a];return e}return l(n)}var x=y;var u="employees",c=class t{save(e){localStorage.setItem(u,JSON.stringify(e))}load(){let e=localStorage.getItem(u);return e?JSON.parse(e):[]}clear(){localStorage.removeItem(u)}static \u0275fac=function(r){return new(r||t)};static \u0275prov=p({token:t,factory:t.\u0275fac,providedIn:"root"})};export{x as a,c as b};
